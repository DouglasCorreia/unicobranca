@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/************************** Media queries breakpoints **************************/

/* Extra small screen / phone */
$screen-xs: 480px !default;
$screen-xs-min: $screen-xs !default;
$screen-phone: $screen-xs-min !default;

/* Small screen / tablet */
$screen-sm: 768px !default;
$screen-sm-min: $screen-sm !default;
$screen-tablet: $screen-sm-min !default;

/* Medium screen / desktop */
$screen-md: 992px !default;
$screen-md-min: $screen-md !default;
$screen-desktop: $screen-md-min !default;

/* Large screen / wide desktop */
$screen-lg: 1200px !default;
$screen-lg-min: $screen-lg !default;
$screen-lg-desktop: $screen-lg-min !default;

/************************** Grid system **************************/

/* Number of columns in the grid. */
$grid-columns: 12 !default;

/* Padding between columns. Gets divided in half for the left and right. */
$grid-gutter-width: 30px !default;

/************************** Centered container element **************************/
@mixin container($gutter: $grid-gutter-width) {
    width: 100%;
    margin: 0 auto;
    padding: 0px 15px;
    @include clearfix;

    @media only screen and (min-width: $screen-xs) {
        max-width: 480px;
    }

    @media only screen and (min-width: $screen-sm) {
        max-width: 768px;
    }

    @media only screen and (min-width: $screen-md) {
        max-width: 992px;
    }

    @media only screen and (min-width: $screen-lg) {
        max-width: 1560px;
        &::after{
            content: unset;
        }
        &::before{
            content: unset;
        }
    }
}

@mixin container-fluid() {
    width: 100%;
    margin: 0 auto;
    padding: 0px 15px;
    @include clearfix;
}

/************************** Creates a row **************************/
@mixin make-row() {
    display: flex;
    flex-wrap: wrap;
    margin-right: -15px;
    margin-left: -15px;
    @include clearfix;
}

/* Generate the extra small columns */
@mixin make-xs-column($columns) {
    //flex: 0 0 percentage(($columns / $grid-columns));
    max-width: percentage(($columns / $grid-columns));
    width: percentage(($columns / $grid-columns));
    padding-left: 15px;
    padding-right: 15px;
}
@mixin make-xs-column-offset($columns) {
    margin-left: percentage(($columns / $grid-columns));
}

/* Generate the small columns */
@mixin make-sm-column($columns) {
    @media only screen and (min-width: $screen-sm-min) {
        //flex: 0 0 percentage(($columns / $grid-columns));
        max-width: percentage(($columns / $grid-columns));
        width: percentage(($columns / $grid-columns));
    }
}

@mixin make-sm-column-offset($columns) {
    @media only screen and (min-width: $screen-sm-min) {
        margin-left: percentage(($columns / $grid-columns));
    }
}

/* Generate the medium columns */
@mixin make-md-column($columns) {
    @media only screen and (min-width: $screen-md-min) {
        //flex: 0 0 percentage(($columns / $grid-columns));
        max-width: percentage(($columns / $grid-columns));
        width: percentage(($columns / $grid-columns));
    }
}

@mixin make-md-column-offset($columns) {
    @media only screen and (min-width: $screen-md-min) {
        margin-left: percentage(($columns / $grid-columns));
    }
}

/* Generate the large columns */
@mixin make-lg-column($columns) {
    @media only screen and (min-width: $screen-lg-min) {
        //flex: 0 0 percentage(($columns / $grid-columns));
        max-width: percentage(($columns / $grid-columns));
        width: percentage(($columns / $grid-columns));
    }
}

@mixin make-lg-column-offset($columns) {
    @media only screen and (min-width: $screen-lg-min) {
        margin-left: percentage(($columns / $grid-columns));
    }
}

/************************** Displays **************************/

@mixin display-xs-none() {
    @media only screen and (min-width: 320px) and (max-width: 767px) {
        display: none;
    }
}

@mixin display-sm-none() {
    @media only screen and (min-width: $screen-sm-min) and (max-width: $screen-md-min) {
        display: none;
    }
}

@mixin display-md-none() {
    @media only screen and (min-width: $screen-md-min) {
        display: none;
    }
}

@mixin display-lg-none() {
    @media only screen and (min-width: $screen-lg-min) {
        display: none;
    }
}

/* Table Responsive */
@mixin table-responsive() {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
}

@mixin transitionFast() {
    -webkit-transition: 250ms ease-in all;
    -moz-transition: 250ms ease-in all;
    -o-transition: 250ms ease-in all;
    transition: 250ms ease-in all;
}

@mixin transitionSlow() {
    -webkit-transition: 500ms ease-in all;
    -moz-transition: 500ms ease-in all;
    -o-transition: 500ms ease-in all;
    transition: 500ms ease-in all;
}

.transition__fast{
    @include transitionFast();
}

.component__container{
    @include container();
}

.component__row{
    @include make-row();
}